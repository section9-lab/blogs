const n=JSON.parse('{"key":"v-5e521f83","path":"/algorithm/Algorithm.html","title":"Algorithm","lang":"zh-CN","frontmatter":{"icon":"fab fa-markdown","date":"2023-11-22T00:00:00.000Z","category":["DataStructures"],"tag":["java"],"star":true,"sticky":true,"description":"Algorithm 算法复杂性分析 algorithm 常数阶(1) public void sum(int n) { int sum = 0; // 执行一次 sum = n*2; // 执行一次 System.out.println(sum); // 执行一次 }","head":[["meta",{"property":"og:url","content":"https://section9-lab.github.io/blogs/blogs/algorithm/Algorithm.html"}],["meta",{"property":"og:site_name","content":"博客站点"}],["meta",{"property":"og:title","content":"Algorithm"}],["meta",{"property":"og:description","content":"Algorithm 算法复杂性分析 algorithm 常数阶(1) public void sum(int n) { int sum = 0; // 执行一次 sum = n*2; // 执行一次 System.out.println(sum); // 执行一次 }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-28T02:32:30.000Z"}],["meta",{"property":"article:author","content":"Section9lab"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2023-11-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-28T02:32:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Algorithm\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-28T02:32:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Section9lab\\",\\"url\\":\\"https://github.com/section9lab/\\"}]}"]]},"headers":[{"level":2,"title":"常数阶(1)","slug":"常数阶-1","link":"#常数阶-1","children":[]},{"level":2,"title":"对数阶(logN)","slug":"对数阶-logn","link":"#对数阶-logn","children":[]},{"level":2,"title":"线性阶(n)","slug":"线性阶-n","link":"#线性阶-n","children":[]},{"level":2,"title":"对数阶(n*logN)","slug":"对数阶-n-logn","link":"#对数阶-n-logn","children":[]},{"level":2,"title":"平方阶(n2)","slug":"平方阶-n2","link":"#平方阶-n2","children":[]},{"level":2,"title":"冒泡排序算法","slug":"冒泡排序算法","link":"#冒泡排序算法","children":[]},{"level":2,"title":"快速排序算法","slug":"快速排序算法","link":"#快速排序算法","children":[]},{"level":2,"title":"二分查找算法","slug":"二分查找算法","link":"#二分查找算法","children":[]},{"level":2,"title":"反转链表","slug":"反转链表","link":"#反转链表","children":[]},{"level":2,"title":"动态规划","slug":"动态规划","link":"#动态规划","children":[{"level":3,"title":"斐波那契数列","slug":"斐波那契数列","link":"#斐波那契数列","children":[]},{"level":3,"title":"爬楼梯","slug":"爬楼梯","link":"#爬楼梯","children":[]},{"level":3,"title":"打家劫舍","slug":"打家劫舍","link":"#打家劫舍","children":[]}]}],"git":{"createdTime":1701136308000,"updatedTime":1701138750000,"contributors":[{"name":"Tachikoma","email":"section9lab@gmail.com","commits":4}]},"readingTime":{"minutes":4.06,"words":1219},"filePathRelative":"algorithm/Algorithm.md","localizedDate":"2023年11月22日","excerpt":"<h1> Algorithm</h1>\\n\\n<hr>\\n<h1> 算法复杂性分析</h1>\\n<figure><figcaption>algorithm</figcaption></figure>\\n<h2> 常数阶(1)</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">sum</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> n<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> sum <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 执行一次</span>\\n    sum <span class=\\"token operator\\">=</span> n<span class=\\"token operator\\">*</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 执行一次</span>\\n    <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>sum<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 执行一次</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
