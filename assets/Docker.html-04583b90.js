import{_ as u}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as p,c as m,d as n,b as a,w as s,e,f as t}from"./app-b8bed171.js";const k="/blogs/assets/docker-flow-0d9b1c5d.png",v={},b=n("h1",{id:"docker",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#docker","aria-hidden":"true"},"#"),e(" Docker")],-1),h={class:"table-of-contents"},_=t('<hr><h1 id="docker-1" tabindex="-1"><a class="header-anchor" href="#docker-1" aria-hidden="true">#</a> Docker</h1><h2 id="_1、docker是什么" tabindex="-1"><a class="header-anchor" href="#_1、docker是什么" aria-hidden="true">#</a> 1、Docker是什么？</h2><p><img src="'+k+'" alt="运行流程" loading="lazy"><br> Docker 基于 Linux 内核的 cgroup，namespace，以及 OverlayFS 类的 Union FS 等技术，对进程进行封装隔离，属于 操作系统层面的虚拟化技术。<br> 由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。</p><p>Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。<br> 使得 Docker 技术比虚拟机技术更为轻便、快捷。</p><h2 id="_2、docker解决了什么问题" tabindex="-1"><a class="header-anchor" href="#_2、docker解决了什么问题" aria-hidden="true">#</a> 2、Docker解决了什么问题？</h2><h3 id="_2-1、在docker诞生之前存在什么问题" tabindex="-1"><a class="header-anchor" href="#_2-1、在docker诞生之前存在什么问题" aria-hidden="true">#</a> 2.1、在Docker诞生之前存在什么问题？</h3><ul><li>没有版本控制，每次上线前要对老包备份。</li><li>没有统一配置，集群里各个硬件节点规格不一样。</li><li>没有统一的环境，dev环境和test环境和prod环境不一样。</li><li>没有隔离，ES和Redis、kafka运行在一起，抢占资源。</li><li>无法移植。</li></ul><h3 id="_2-2、docker的优点" tabindex="-1"><a class="header-anchor" href="#_2-2、docker的优点" aria-hidden="true">#</a> 2.2、Docker的优点：</h3><ul><li>更高效的利用系统资源</li></ul><blockquote><p>Docker 容器不需硬件虚拟和运行操作系统的开销,因此在同等配置下,主机可以运行更多数量的应用。</p></blockquote><ul><li>更快速的启动时间</li></ul><blockquote><p>Docker 容器直接运行于宿主机内核,避免启动完整操作系统,从而实现秒级甚至毫秒级的应用启动。</p></blockquote><ul><li>一致的运行环境</li></ul><blockquote><p>Docker 镜像提供除内核外完整的运行环境,确保从开发到生产的环境一致性,避免了「代码在我机器上没问题」这类问题的出现。</p></blockquote><ul><li>持续交付和部署</li></ul><blockquote><p>对开发和运维人员来说,Docker 可以通过制作应用镜像,实现从持续集成到持续交付及自动化部署,整个过程透明且高效。</p></blockquote><ul><li>更轻松的迁移</li></ul><blockquote><p>Docker 容器化应用执行环境,使应用迁移到任意平台时环境一致、顺利运行。</p></blockquote><ul><li>更轻松的维护和扩展</li></ul><blockquote><p>Docker 利用分层存储和镜像技术,使应用复用、维护和定制变得简单高效,配合优质官方镜像,可直接用于生产或定制使用,大幅降低应用镜像制作成本。</p></blockquote><h2 id="_3、安装docker" tabindex="-1"><a class="header-anchor" href="#_3、安装docker" aria-hidden="true">#</a> 3、安装docker</h2><p>docker_install.sh</p>',23),f=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token shebang important"},"#!/usr/bin/bash"),e(`
 
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt-get"),e(" remove "),n("span",{class:"token function"},"docker"),e(`
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt-get"),e(` remove docker-engine
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt-get"),e(` remove docker.io
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt-get"),e(` update
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt-get"),e(),n("span",{class:"token function"},"install"),e(" apt-transport-https ca-certificates "),n("span",{class:"token function"},"curl"),e(" gnupg lsb-release "),n("span",{class:"token parameter variable"},"-y"),e(`
`),n("span",{class:"token function"},"curl"),e(),n("span",{class:"token parameter variable"},"-fsSL"),e(" https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg "),n("span",{class:"token operator"},"|"),e(),n("span",{class:"token function"},"sudo"),e(" gpg "),n("span",{class:"token parameter variable"},"--dearmor"),e(),n("span",{class:"token parameter variable"},"-o"),e(` /usr/share/keyrings/docker-archive-keyring.gpg
`),n("span",{class:"token builtin class-name"},"echo"),e(),n("span",{class:"token string"},[e('"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu  '),n("span",{class:"token variable"},[n("span",{class:"token variable"},"$("),e("lsb_release "),n("span",{class:"token parameter variable"},"-cs"),n("span",{class:"token variable"},")")]),e(' stable"')]),e(),n("span",{class:"token operator"},"|"),e(),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"tee"),e(" /etc/apt/sources.list.d/docker.list "),n("span",{class:"token operator"},">"),e(` /dev/null
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt-get"),e(` update
`),n("span",{class:"token function"},"sudo"),e(),n("span",{class:"token function"},"apt-get"),e(),n("span",{class:"token function"},"install"),e(" docker-ce docker-ce-cli containerd.io "),n("span",{class:"token parameter variable"},"-y"),e(`

`),n("span",{class:"token function"},"sudo"),e(" systemctl "),n("span",{class:"token builtin class-name"},"enable"),e(),n("span",{class:"token function"},"docker"),e(`
`),n("span",{class:"token function"},"sudo"),e(" systemctl start "),n("span",{class:"token function"},"docker"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token shebang important"},"#!/usr/bin/bash"),e(`

yum `),n("span",{class:"token parameter variable"},"-y"),e(` update
yum remove `),n("span",{class:"token function"},"docker"),e("  docker-client "),n("span",{class:"token punctuation"},"\\"),e(`
docker-client-latest docker-common `),n("span",{class:"token punctuation"},"\\"),e(`
docker-latest docker-latest-logrotate `),n("span",{class:"token punctuation"},"\\"),e(`
docker-logrotate docker-engine

yum `),n("span",{class:"token function"},"install"),e(),n("span",{class:"token parameter variable"},"-y"),e(` yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
yum `),n("span",{class:"token function"},"install"),e(),n("span",{class:"token parameter variable"},"-y"),e(` docker-ce docker-ce-cli containerd.io docker-compose-plugin

systemctl `),n("span",{class:"token builtin class-name"},"enable"),e(` docker.service
systemctl restart `),n("span",{class:"token function"},"docker"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=t(`<h2 id="_4、docker命令" tabindex="-1"><a class="header-anchor" href="#_4、docker命令" aria-hidden="true">#</a> 4、docker命令</h2><h3 id="_4-1、image" tabindex="-1"><a class="header-anchor" href="#_4-1、image" aria-hidden="true">#</a> 4.1、image</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看服务器中docker 镜像列表：</span>
<span class="token function">docker</span> images

<span class="token comment">#搜索镜像：</span>
<span class="token function">docker</span> search <span class="token punctuation">[</span>镜像名<span class="token punctuation">]</span>

<span class="token comment">#拉取镜像：</span>
<span class="token function">docker</span> pull 镜像名 
<span class="token function">docker</span> pull 镜像名:tag

<span class="token comment">#运行镜像:</span>
<span class="token function">docker</span> run 镜像名
<span class="token function">docker</span> run 镜像名:Tag
<span class="token function">docker</span> stop containerId // containerId 是容器的ID

<span class="token comment">#修改镜像：</span>
<span class="token function">docker</span> <span class="token function">ps</span>
<span class="token function">docker</span> commit x7205xxxxxx1 sequenceiq/hadoop-docker:2.7.0-7

<span class="token comment">#删除一个</span>
<span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> 镜像名/镜像ID

<span class="token comment">#删除全部镜像  -a 意思为显示全部, -q 意思为只显示ID</span>
<span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-aq</span><span class="token variable">)</span></span>

<span class="token comment">#强制删除镜像</span>
<span class="token function">docker</span> image <span class="token function">rm</span> 镜像名称/镜像ID

<span class="token comment">#保存镜像(将我们的镜像 保存为tar 压缩文件 这样方便镜像转移和保存 ,然后 可以在任何一台安装了docker的服务器上 加载这个镜像)</span>
<span class="token function">docker</span> save <span class="token parameter variable">-o</span> rocketmq.tar

<span class="token comment">#加载镜像(任何装 docker 的地方加载镜像保存文件,使其恢复为一个镜像)</span>
<span class="token function">docker</span> load <span class="token parameter variable">--input</span> rocketmq.tar 或 <span class="token function">docker</span> load <span class="token operator">&lt;</span> rocketmq.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-1、文件" tabindex="-1"><a class="header-anchor" href="#_4-1、文件" aria-hidden="true">#</a> 4.1、文件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#文件映射</span>
<span class="token function">docker</span> run <span class="token parameter variable">-v</span> /etc/config:/etc/config my_image

<span class="token comment">#文件cp</span>
<span class="token function">docker</span> <span class="token function">cp</span> /mnt/c/Users/wxx/Downloads/kafka_2.12-2.1.2.tar.gz 64222xxx110:/usr/local/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2、容器" tabindex="-1"><a class="header-anchor" href="#_4-2、容器" aria-hidden="true">#</a> 4.2、容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看正在运行的容器列表</span>
<span class="token function">docker</span> <span class="token function">ps</span>

<span class="token comment">#查看所有容器</span>
<span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>

<span class="token comment">#创建并启动容器</span>
<span class="token operator">&gt;</span> <span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>kylin-test <span class="token parameter variable">--net</span><span class="token operator">=</span>host kylin-os-backup:latest /bin/bash

<span class="token comment">#停用</span>
<span class="token function">docker</span> stop xxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、dockerfile" tabindex="-1"><a class="header-anchor" href="#_5、dockerfile" aria-hidden="true">#</a> 5、Dockerfile</h2><h3 id="_5-1、本地文件" tabindex="-1"><a class="header-anchor" href="#_5-1、本地文件" aria-hidden="true">#</a> 5.1、本地文件</h3><h4 id="_5-1-1、创建dockerfile项目" tabindex="-1"><a class="header-anchor" href="#_5-1-1、创建dockerfile项目" aria-hidden="true">#</a> 5.1.1、创建dockerfile项目</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> redis <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> redis
$ <span class="token function">touch</span> Dockerfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>FROM centos
RUN yum -y install wget \\
    &amp;&amp; wget -O redis.tar.gz &quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot; \\
    &amp;&amp; tar -xvf redis.tar.gz \\
    &amp;&amp; rm redis.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-1-2、构建" tabindex="-1"><a class="header-anchor" href="#_5-1-2、构建" aria-hidden="true">#</a> 5.1.2、构建</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> redis:test <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_5-1-3、运行" tabindex="-1"><a class="header-anchor" href="#_5-1-3、运行" aria-hidden="true">#</a> 5.1.3、运行</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token parameter variable">--name</span> redis redis:test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-2、git构建" tabindex="-1"><a class="header-anchor" href="#_5-2、git构建" aria-hidden="true">#</a> 5.2、git构建</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> hello-world https://github.com/docker-library/hello-world.git<span class="token comment">#master:amd64/hello-world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-3、标准输入构建" tabindex="-1"><a class="header-anchor" href="#_5-3、标准输入构建" aria-hidden="true">#</a> 5.3、标准输入构建</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> mybusybox:latest -<span class="token operator">&lt;&lt;</span><span class="token string">EOF
FROM busybox
RUN echo &quot;hello world&quot;
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、例子" tabindex="-1"><a class="header-anchor" href="#_6、例子" aria-hidden="true">#</a> 6、例子</h2><h3 id="_6-1、启动一个本地hadoop镜像" tabindex="-1"><a class="header-anchor" href="#_6-1、启动一个本地hadoop镜像" aria-hidden="true">#</a> 6.1、启动一个本地hadoop镜像</h3><p>下载image</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull sequenceiq/hadoop-docker:2.7.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#后台运行</span>
<span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token parameter variable">-dti</span> <span class="token parameter variable">--hostname</span> bigdatadev.host <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">50070</span>:50070 <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token parameter variable">-p</span> <span class="token number">8088</span>:8088 <span class="token parameter variable">-p</span> <span class="token number">8040</span>:8040 <span class="token parameter variable">-p</span> <span class="token number">8042</span>:8042 <span class="token parameter variable">-p</span> <span class="token number">49707</span>:49707 <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">50010</span>:50010 <span class="token parameter variable">-p</span> <span class="token number">50075</span>:50075 <span class="token parameter variable">-p</span> <span class="token number">50090</span>:50090 <span class="token parameter variable">-p</span> <span class="token number">2181</span>:2181 <span class="token parameter variable">-p</span> <span class="token number">9092</span>:9092 <span class="token punctuation">\\</span>
sequenceiq/hadoop-docker:2.7.0 /etc/bootstrap.sh <span class="token parameter variable">-bash</span> <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>hdfs-ui
http://localhost:50070/dfshealth.html#tab-overview

yarn-ui
http://localhost:8088/cluster/apps/RUNNING
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、docker-镜像加速" tabindex="-1"><a class="header-anchor" href="#_7、docker-镜像加速" aria-hidden="true">#</a> 7、docker 镜像加速</h2><p>7.1、配置</p>`,30),y=n("thead",null,[n("tr",null,[n("th",null,"镜像加速器"),n("th",null,"镜像加速器地址"),n("th",null,[e("其它加速"),n("a",{href:"#",title:"支持哪些镜像来源的镜像加速"},"？")])])],-1),D={href:"https://github.com/DaoCloud/public-image-mirror",target:"_blank",rel:"noopener noreferrer"},q=n("td",null,[n("code",null,"https://docker.m.daocloud.io")],-1),C=n("td",null,"Docker Hub、GCR、K8S、GHCR、Quay、NVCR 等",-1),E={href:"https://c.163yun.com/hub",target:"_blank",rel:"noopener noreferrer"},w=n("td",null,[n("code",null,"https://hub-mirror.c.163.com")],-1),R=n("td",null,"Docker Hub",-1),F={href:"https://dockerproxy.com",target:"_blank",rel:"noopener noreferrer"},N=n("td",null,[n("code",null,"https://dockerproxy.com")],-1),O=n("td",null,"Docker Hub、GCR、K8S、GHCR",-1),j={href:"https://cloud.baidu.com/doc/CCE/s/Yjxppt74z#%E4%BD%BF%E7%94%A8dockerhub%E5%8A%A0%E9%80%9F%E5%99%A8",target:"_blank",rel:"noopener noreferrer"},I=n("td",null,[n("code",null,"https://mirror.baidubce.com")],-1),S=n("td",null,"Docker Hub",-1),A={href:"https://doc.nju.edu.cn/books/35f4a",target:"_blank",rel:"noopener noreferrer"},H=n("td",null,[n("code",null,"https://docker.nju.edu.cn")],-1),z=n("td",null,null,-1),G={href:"https://mirrors.sjtug.sjtu.edu.cn/",target:"_blank",rel:"noopener noreferrer"},$=n("td",null,[n("code",null,"https://docker.mirrors.sjtug.sjtu.edu.cn")],-1),B=n("td",null,"Docker Hub、GCR 等",-1),U={href:"https://mirror.iscas.ac.cn/mirror/docker.html",target:"_blank",rel:"noopener noreferrer"},V=n("td",null,[n("code",null,"https://mirror.iscas.ac.cn")],-1),L=n("td",null,"Docker Hub",-1),T=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker
<span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">&#39;EOF&#39;
{
    &quot;registry-mirrors&quot;: [
        &quot;https://dockerproxy.com&quot;,
        &quot;https://docker.mirrors.ustc.edu.cn&quot;,
        &quot;https://docker.nju.edu.cn&quot;
    ]
}
EOF</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7.2、检测<br> 命令行执行<code>docker info</code>，如果从结果中看到了如下内容，说明配置成功。</p>`,2),M=n("br",null,null,-1),K=n("br",null,null,-1),P={href:"https://docker.m.daocloud.io",target:"_blank",rel:"noopener noreferrer"},Q=t(`<p>7.3、测速<br> 使用镜像前后，可使用 time 统计所花费的总时间。测速前先移除本地的镜像！</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ docker rmi node:latest
$ time docker pull node:latest
Pulling repository node
[...]

real   1m14.078s
user   0m0.176s
sys    0m0.120s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function Y(J,W){const l=c("router-link"),d=c("CodeTabs"),i=c("ExternalLinkIcon");return p(),m("div",null,[b,n("nav",h,[n("ul",null,[n("li",null,[a(l,{to:"#_1、docker是什么"},{default:s(()=>[e("1、Docker是什么？")]),_:1})]),n("li",null,[a(l,{to:"#_2、docker解决了什么问题"},{default:s(()=>[e("2、Docker解决了什么问题？")]),_:1}),n("ul",null,[n("li",null,[a(l,{to:"#_2-1、在docker诞生之前存在什么问题"},{default:s(()=>[e("2.1、在Docker诞生之前存在什么问题？")]),_:1})]),n("li",null,[a(l,{to:"#_2-2、docker的优点"},{default:s(()=>[e("2.2、Docker的优点：")]),_:1})])])]),n("li",null,[a(l,{to:"#_3、安装docker"},{default:s(()=>[e("3、安装docker")]),_:1})]),n("li",null,[a(l,{to:"#_4、docker命令"},{default:s(()=>[e("4、docker命令")]),_:1}),n("ul",null,[n("li",null,[a(l,{to:"#_4-1、image"},{default:s(()=>[e("4.1、image")]),_:1})]),n("li",null,[a(l,{to:"#_4-1、文件"},{default:s(()=>[e("4.1、文件")]),_:1})]),n("li",null,[a(l,{to:"#_4-2、容器"},{default:s(()=>[e("4.2、容器")]),_:1})])])]),n("li",null,[a(l,{to:"#_5、dockerfile"},{default:s(()=>[e("5、Dockerfile")]),_:1}),n("ul",null,[n("li",null,[a(l,{to:"#_5-1、本地文件"},{default:s(()=>[e("5.1、本地文件")]),_:1})]),n("li",null,[a(l,{to:"#_5-2、git构建"},{default:s(()=>[e("5.2、git构建")]),_:1})]),n("li",null,[a(l,{to:"#_5-3、标准输入构建"},{default:s(()=>[e("5.3、标准输入构建")]),_:1})])])]),n("li",null,[a(l,{to:"#_6、例子"},{default:s(()=>[e("6、例子")]),_:1}),n("ul",null,[n("li",null,[a(l,{to:"#_6-1、启动一个本地hadoop镜像"},{default:s(()=>[e("6.1、启动一个本地hadoop镜像")]),_:1})])])]),n("li",null,[a(l,{to:"#_7、docker-镜像加速"},{default:s(()=>[e("7、docker 镜像加速")]),_:1})])])]),_,a(d,{id:"133",data:[{id:"ubuntu"},{id:"CentOS"}],"tab-id":"bash"},{title0:s(({value:r,isActive:o})=>[e("ubuntu")]),title1:s(({value:r,isActive:o})=>[e("CentOS")]),tab0:s(({value:r,isActive:o})=>[f]),tab1:s(({value:r,isActive:o})=>[g]),_:1}),x,n("table",null,[y,n("tbody",null,[n("tr",null,[n("td",null,[n("a",D,[e("DaoCloud 镜像站"),a(i)])]),q,C]),n("tr",null,[n("td",null,[n("a",E,[e("网易云"),a(i)])]),w,R]),n("tr",null,[n("td",null,[n("a",F,[e("Docker 镜像代理"),a(i)])]),N,O]),n("tr",null,[n("td",null,[n("a",j,[e("百度云"),a(i)])]),I,S]),n("tr",null,[n("td",null,[n("a",A,[e("南京大学镜像站"),a(i)])]),H,z]),n("tr",null,[n("td",null,[n("a",G,[e("上海交大镜像站"),a(i)])]),$,B]),n("tr",null,[n("td",null,[n("a",U,[e("中科院软件所镜像站"),a(i)])]),V,L])])]),T,n("p",null,[e("Registry Mirrors:"),M,e(" [...]"),K,n("a",P,[e("https://docker.m.daocloud.io"),a(i)])]),Q])}const nn=u(v,[["render",Y],["__file","Docker.html.vue"]]);export{nn as default};
