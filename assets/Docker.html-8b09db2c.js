import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as p,c as u,d as a,b as s,w as e,e as n,f as m}from"./app-aa63db7c.js";const k={},v=a("h1",{id:"docker",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#docker","aria-hidden":"true"},"#"),n(" Docker")],-1),b={class:"table-of-contents"},h=a("hr",null,null,-1),f=a("h1",{id:"docker-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#docker-1","aria-hidden":"true"},"#"),n(" Docker")],-1),g=a("h2",{id:"安装docker",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装docker","aria-hidden":"true"},"#"),n(" 安装docker")],-1),_=a("p",null,"docker_install.sh",-1),x=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token shebang important"},"#!/usr/bin/bash"),n(`
 
`),a("span",{class:"token function"},"sudo"),n(),a("span",{class:"token function"},"apt-get"),n(" remove "),a("span",{class:"token function"},"docker"),n(`
`),a("span",{class:"token function"},"sudo"),n(),a("span",{class:"token function"},"apt-get"),n(` remove docker-engine
`),a("span",{class:"token function"},"sudo"),n(),a("span",{class:"token function"},"apt-get"),n(` remove docker.io
`),a("span",{class:"token function"},"sudo"),n(),a("span",{class:"token function"},"apt-get"),n(` update
`),a("span",{class:"token function"},"sudo"),n(),a("span",{class:"token function"},"apt-get"),n(),a("span",{class:"token function"},"install"),n(" apt-transport-https ca-certificates "),a("span",{class:"token function"},"curl"),n(" gnupg lsb-release "),a("span",{class:"token parameter variable"},"-y"),n(`
`),a("span",{class:"token function"},"curl"),n(),a("span",{class:"token parameter variable"},"-fsSL"),n(" https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg "),a("span",{class:"token operator"},"|"),n(),a("span",{class:"token function"},"sudo"),n(" gpg "),a("span",{class:"token parameter variable"},"--dearmor"),n(),a("span",{class:"token parameter variable"},"-o"),n(` /usr/share/keyrings/docker-archive-keyring.gpg
`),a("span",{class:"token builtin class-name"},"echo"),n(),a("span",{class:"token string"},[n('"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu  '),a("span",{class:"token variable"},[a("span",{class:"token variable"},"$("),n("lsb_release "),a("span",{class:"token parameter variable"},"-cs"),a("span",{class:"token variable"},")")]),n(' stable"')]),n(),a("span",{class:"token operator"},"|"),n(),a("span",{class:"token function"},"sudo"),n(),a("span",{class:"token function"},"tee"),n(" /etc/apt/sources.list.d/docker.list "),a("span",{class:"token operator"},">"),n(` /dev/null
`),a("span",{class:"token function"},"sudo"),n(),a("span",{class:"token function"},"apt-get"),n(` update
`),a("span",{class:"token function"},"sudo"),n(),a("span",{class:"token function"},"apt-get"),n(),a("span",{class:"token function"},"install"),n(" docker-ce docker-ce-cli containerd.io "),a("span",{class:"token parameter variable"},"-y"),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),y=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token shebang important"},"#!/usr/bin/bash"),n(`

yum `),a("span",{class:"token parameter variable"},"-y"),n(` update
yum remove `),a("span",{class:"token function"},"docker"),n("  docker-client "),a("span",{class:"token punctuation"},"\\"),n(`
docker-client-latest docker-common `),a("span",{class:"token punctuation"},"\\"),n(`
docker-latest docker-latest-logrotate `),a("span",{class:"token punctuation"},"\\"),n(`
docker-logrotate docker-engine

yum `),a("span",{class:"token function"},"install"),n(),a("span",{class:"token parameter variable"},"-y"),n(` yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
yum `),a("span",{class:"token function"},"install"),n(),a("span",{class:"token parameter variable"},"-y"),n(` docker-ce docker-ce-cli containerd.io docker-compose-plugin

systemctl `),a("span",{class:"token builtin class-name"},"enable"),n(` docker.service
systemctl restart `),a("span",{class:"token function"},"docker"),n(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),q=m(`<h2 id="启动docker" tabindex="-1"><a class="header-anchor" href="#启动docker" aria-hidden="true">#</a> 启动docker</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="docker命令" tabindex="-1"><a class="header-anchor" href="#docker命令" aria-hidden="true">#</a> docker命令</h2><h4 id="docker-image" tabindex="-1"><a class="header-anchor" href="#docker-image" aria-hidden="true">#</a> docker image</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看服务器中docker 镜像列表：</span>
<span class="token function">docker</span> images

<span class="token comment">#搜索镜像：</span>
<span class="token function">docker</span> search <span class="token punctuation">[</span>镜像名<span class="token punctuation">]</span>

<span class="token comment">#拉取镜像：</span>
<span class="token function">docker</span> pull 镜像名 
<span class="token function">docker</span> pull 镜像名:tag

<span class="token comment">#运行镜像:</span>
<span class="token function">docker</span> run 镜像名
<span class="token function">docker</span> run 镜像名:Tag
<span class="token function">docker</span> stop containerId // containerId 是容器的ID

<span class="token comment">#修改镜像：</span>
<span class="token function">docker</span> <span class="token function">ps</span>
<span class="token function">docker</span> commit x7205xxxxxx1 sequenceiq/hadoop-docker:2.7.0-7

<span class="token comment">#删除一个</span>
<span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> 镜像名/镜像ID

<span class="token comment">#删除全部镜像  -a 意思为显示全部, -q 意思为只显示ID</span>
<span class="token function">docker</span> rmi <span class="token parameter variable">-f</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> images <span class="token parameter variable">-aq</span><span class="token variable">)</span></span>

<span class="token comment">#强制删除镜像</span>
<span class="token function">docker</span> image <span class="token function">rm</span> 镜像名称/镜像ID

<span class="token comment">#保存镜像(将我们的镜像 保存为tar 压缩文件 这样方便镜像转移和保存 ,然后 可以在任何一台安装了docker的服务器上 加载这个镜像)</span>
<span class="token function">docker</span> save <span class="token parameter variable">-o</span> rocketmq.tar

<span class="token comment">#加载镜像(任何装 docker 的地方加载镜像保存文件,使其恢复为一个镜像)</span>
<span class="token function">docker</span> load <span class="token parameter variable">--input</span> rocketmq.tar 或 <span class="token function">docker</span> load <span class="token operator">&lt;</span> rocketmq.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#文件映射</span>
<span class="token function">docker</span> run <span class="token parameter variable">-v</span> /etc/config：/etc/config my_image

<span class="token comment">#文件cp</span>
<span class="token function">docker</span> <span class="token function">cp</span> /mnt/c/Users/wxx/Downloads/kafka_2.12-2.1.2.tar.gz 64222xxx110:/usr/local/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-容器" tabindex="-1"><a class="header-anchor" href="#docker-容器" aria-hidden="true">#</a> docker 容器</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看正在运行的容器列表</span>
<span class="token function">docker</span> <span class="token function">ps</span>

<span class="token comment">#查看所有容器</span>
<span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>

<span class="token comment">#创建并启动容器</span>
<span class="token operator">&gt;</span> <span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>kylin-test <span class="token parameter variable">--net</span><span class="token operator">=</span>host kylin-os-backup:latest /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile</h2><h3 id="本地文件" tabindex="-1"><a class="header-anchor" href="#本地文件" aria-hidden="true">#</a> 本地文件</h3><h4 id="创建dockerfile项目" tabindex="-1"><a class="header-anchor" href="#创建dockerfile项目" aria-hidden="true">#</a> 创建dockerfile项目</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> redis <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> redis
$ <span class="token function">touch</span> Dockerfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>FROM centos
RUN yum -y install wget \\
    &amp;&amp; wget -O redis.tar.gz &quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot; \\
    &amp;&amp; tar -xvf redis.tar.gz \\
    &amp;&amp; rm redis.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="构建" tabindex="-1"><a class="header-anchor" href="#构建" aria-hidden="true">#</a> 构建</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> redis:test <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token parameter variable">--name</span> redis redis:test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="git构建" tabindex="-1"><a class="header-anchor" href="#git构建" aria-hidden="true">#</a> git构建</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> hello-world https://github.com/docker-library/hello-world.git<span class="token comment">#master:amd64/hello-world</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="标准输入构建" tabindex="-1"><a class="header-anchor" href="#标准输入构建" aria-hidden="true">#</a> 标准输入构建</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> mybusybox:latest -<span class="token operator">&lt;&lt;</span><span class="token string">EOF
FROM busybox
RUN echo &quot;hello world&quot;
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><blockquote><p>启动一个本地hadoop镜像</p></blockquote><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像" aria-hidden="true">#</a> 拉取镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull sequenceiq/hadoop-docker:2.7.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="使用镜像" tabindex="-1"><a class="header-anchor" href="#使用镜像" aria-hidden="true">#</a> 使用镜像</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#后台运行</span>
<span class="token function">sudo</span> <span class="token function">docker</span> run <span class="token parameter variable">-dti</span> <span class="token parameter variable">-p</span> <span class="token number">50070</span>:50070 <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000 <span class="token parameter variable">-p</span> <span class="token number">8088</span>:8088 <span class="token parameter variable">-p</span> <span class="token number">8040</span>:8040 <span class="token parameter variable">-p</span> <span class="token number">8042</span>:8042  <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">49707</span>:49707  <span class="token parameter variable">-p</span> <span class="token number">50010</span>:50010  <span class="token parameter variable">-p</span> <span class="token number">50075</span>:50075  <span class="token parameter variable">-p</span> <span class="token number">50090</span>:50090 <span class="token parameter variable">-p</span> <span class="token number">2181</span>:2181 <span class="token parameter variable">-p</span> <span class="token number">9092</span>:9092 <span class="token punctuation">\\</span>
sequenceiq/hadoop-docker:2.7.0 /etc/bootstrap.sh <span class="token parameter variable">-bash</span> <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试：</h3>`,28),w=a("br",null,null,-1),D={href:"http://localhost:50070/dfshealth.html#tab-overview",target:"_blank",rel:"noopener noreferrer"},N=a("br",null,null,-1),I={href:"http://localhost:8088/cluster/apps/RUNNING",target:"_blank",rel:"noopener noreferrer"};function O(C,R){const l=c("router-link"),o=c("CodeTabs"),r=c("ExternalLinkIcon");return p(),u("div",null,[v,a("nav",b,[a("ul",null,[a("li",null,[s(l,{to:"#安装docker"},{default:e(()=>[n("安装docker")]),_:1})]),a("li",null,[s(l,{to:"#启动docker"},{default:e(()=>[n("启动docker")]),_:1})]),a("li",null,[s(l,{to:"#docker命令"},{default:e(()=>[n("docker命令")]),_:1}),a("ul",null,[a("li",null,[s(l,{to:"#docker-容器"},{default:e(()=>[n("docker 容器")]),_:1})])])]),a("li",null,[s(l,{to:"#dockerfile"},{default:e(()=>[n("Dockerfile")]),_:1}),a("ul",null,[a("li",null,[s(l,{to:"#本地文件"},{default:e(()=>[n("本地文件")]),_:1})]),a("li",null,[s(l,{to:"#git构建"},{default:e(()=>[n("git构建")]),_:1})]),a("li",null,[s(l,{to:"#标准输入构建"},{default:e(()=>[n("标准输入构建")]),_:1})])])]),a("li",null,[s(l,{to:"#例子"},{default:e(()=>[n("例子")]),_:1}),a("ul",null,[a("li",null,[s(l,{to:"#拉取镜像"},{default:e(()=>[n("拉取镜像")]),_:1})]),a("li",null,[s(l,{to:"#使用镜像"},{default:e(()=>[n("使用镜像")]),_:1})]),a("li",null,[s(l,{to:"#测试"},{default:e(()=>[n("测试：")]),_:1})])])])])]),h,f,g,_,s(o,{id:"16",data:[{id:"ubuntu"},{id:"CentOS"}],"tab-id":"bash"},{title0:e(({value:i,isActive:t})=>[n("ubuntu")]),title1:e(({value:i,isActive:t})=>[n("CentOS")]),tab0:e(({value:i,isActive:t})=>[x]),tab1:e(({value:i,isActive:t})=>[y]),_:1}),q,a("p",null,[n("hdfs-ui"),w,a("a",D,[n("http://localhost:50070/dfshealth.html#tab-overview"),s(r)])]),a("p",null,[n("yarn-ui"),N,a("a",I,[n("http://localhost:8088/cluster/apps/RUNNING"),s(r)])])])}const U=d(k,[["render",O],["__file","Docker.html.vue"]]);export{U as default};
