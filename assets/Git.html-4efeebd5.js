const e=JSON.parse('{"key":"v-96202f60","path":"/posts/tools/Git.html","title":"Git","lang":"zh-CN","frontmatter":{"icon":"fab fa-markdown","date":"2022-01-12T00:00:00.000Z","category":["Tools"],"tag":["tools","git"],"star":true,"sticky":true,"description":"Git GitFlow规范 GitFlow # 1 Master 分支 提供基础分支，其他版本随时从主分支切分出去做版本开发;只能从release和hotfix分支合并过来，研发不可直接commit到主分支。 版本发布从合并后的主分支上打tag # 2 Develop 分支 这个分支是开发分支，新增功能时候需要基于开发分支切分出 Feature 或以自己命名的分支，所有的Feature或命名分支都是从这个分支切出去的。 而 Feature 或命名分支的功能完成后，都会再合并到这个分支上来。 # 3 Hotfix 分支 客户的现场产品版本发生紧急故障时候,会从Master分支开一个Hotfix分支进行修复,Hotfix 修复完成后要再合并到Master和Develop 分支。 为什么合并回Dev分支？防止Dev合并到Master分支会被覆盖,故障再次出现。 为什么不在Dev分支修复？Dev还在开发,会有其他未知风险。 # 4 Release 分支 Develop分支成熟后可以合并到 Release 分支。做完最后的测试 Release 分支将会同时合并到 Master 以及 Develop 這两个分支上。 # 5 Feature||name 分支 Feature 分支都是从 Develop 分支來的，完成之后会在合并回 Develop 分支。","head":[["meta",{"property":"og:url","content":"https://section9-lab.github.io/blogs/blogs/posts/tools/Git.html"}],["meta",{"property":"og:site_name","content":"博客站点"}],["meta",{"property":"og:title","content":"Git"}],["meta",{"property":"og:description","content":"Git GitFlow规范 GitFlow # 1 Master 分支 提供基础分支，其他版本随时从主分支切分出去做版本开发;只能从release和hotfix分支合并过来，研发不可直接commit到主分支。 版本发布从合并后的主分支上打tag # 2 Develop 分支 这个分支是开发分支，新增功能时候需要基于开发分支切分出 Feature 或以自己命名的分支，所有的Feature或命名分支都是从这个分支切出去的。 而 Feature 或命名分支的功能完成后，都会再合并到这个分支上来。 # 3 Hotfix 分支 客户的现场产品版本发生紧急故障时候,会从Master分支开一个Hotfix分支进行修复,Hotfix 修复完成后要再合并到Master和Develop 分支。 为什么合并回Dev分支？防止Dev合并到Master分支会被覆盖,故障再次出现。 为什么不在Dev分支修复？Dev还在开发,会有其他未知风险。 # 4 Release 分支 Develop分支成熟后可以合并到 Release 分支。做完最后的测试 Release 分支将会同时合并到 Master 以及 Develop 這两个分支上。 # 5 Feature||name 分支 Feature 分支都是从 Develop 分支來的，完成之后会在合并回 Develop 分支。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-22T10:15:30.000Z"}],["meta",{"property":"article:author","content":"Section9lab"}],["meta",{"property":"article:tag","content":"tools"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-22T10:15:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-22T10:15:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Section9lab\\",\\"url\\":\\"https://github.com/section9lab/\\"}]}"]]},"headers":[{"level":2,"title":"GitFlow规范","slug":"gitflow规范","link":"#gitflow规范","children":[]},{"level":2,"title":"commit 规范","slug":"commit-规范","link":"#commit-规范","children":[{"level":3,"title":"格式","slug":"格式","link":"#格式","children":[]}]},{"level":2,"title":"commit Tips","slug":"commit-tips","link":"#commit-tips","children":[]},{"level":2,"title":"如何优雅的merge（git pull --rebase）","slug":"如何优雅的merge-git-pull-rebase","link":"#如何优雅的merge-git-pull-rebase","children":[]},{"level":2,"title":"关于git reset和git revert","slug":"关于git-reset和git-revert","link":"#关于git-reset和git-revert","children":[]}],"git":{"createdTime":1700808496000,"updatedTime":1732270530000,"contributors":[{"name":"Tachikoma","email":"section9lab@gmail.com","commits":12}]},"readingTime":{"minutes":3.71,"words":1114},"filePathRelative":"posts/tools/Git.md","localizedDate":"2022年1月12日","excerpt":"<h1> Git</h1>\\n\\n<hr>\\n<h2> GitFlow规范</h2>\\n<figure><figcaption>GitFlow</figcaption></figure>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code># 1 Master 分支\\n提供基础分支，其他版本随时从主分支切分出去做版本开发;只能从release和hotfix分支合并过来，研发不可直接commit到主分支。\\n版本发布从合并后的主分支上打tag\\n\\n# 2 Develop 分支\\n这个分支是开发分支，新增功能时候需要基于开发分支切分出 Feature 或以自己命名的分支，所有的Feature或命名分支都是从这个分支切出去的。\\n而 Feature 或命名分支的功能完成后，都会再合并到这个分支上来。\\n\\n# 3 Hotfix 分支\\n客户的现场产品版本发生紧急故障时候,会从Master分支开一个Hotfix分支进行修复,Hotfix 修复完成后要再合并到Master和Develop 分支。\\n为什么合并回Dev分支？防止Dev合并到Master分支会被覆盖,故障再次出现。\\n为什么不在Dev分支修复？Dev还在开发,会有其他未知风险。\\n\\n# 4 Release 分支\\nDevelop分支成熟后可以合并到 Release 分支。做完最后的测试 Release 分支将会同时合并到 Master 以及 Develop 這两个分支上。\\n\\n# 5 Feature||name 分支\\nFeature 分支都是从 Develop 分支來的，完成之后会在合并回 Develop 分支。\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
